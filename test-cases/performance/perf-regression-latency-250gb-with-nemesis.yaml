test_duration: 680
prepare_write_cmd: ["cassandra-stress write no-warmup cl=ALL n=6250000 -schema 'replication(factor=3)' -port jmx=6868 -mode cql3 native -rate threads=200 -col 'size=FIXED(128) n=FIXED(8)' -pop seq=1..6250000",
                    "cassandra-stress write no-warmup cl=ALL n=6250000 -schema 'replication(factor=3)' -port jmx=6868 -mode cql3 native -rate threads=200 -col 'size=FIXED(128) n=FIXED(8)' -pop seq=62500001..12500000",
                    "cassandra-stress write no-warmup cl=ALL n=6250000 -schema 'replication(factor=3)' -port jmx=6868 -mode cql3 native -rate threads=200 -col 'size=FIXED(128) n=FIXED(8)' -pop seq=125000001..18750000",
                    "cassandra-stress write no-warmup cl=ALL n=6250000 -schema 'replication(factor=3)' -port jmx=6868 -mode cql3 native -rate threads=200 -col 'size=FIXED(128) n=FIXED(8)' -pop seq=187500001..25000000"]

stress_cmd_w: "cassandra-stress write no-warmup cl=QUORUM duration=600m -schema 'replication(factor=3)' -port jmx=6868 -mode cql3 native -rate 'threads=50 throttle=5000/s' -col 'size=FIXED(128) n=FIXED(8)' -pop 'dist=gauss(1..25000000,12500000,1250000)' "
stress_cmd_r: "cassandra-stress read no-warmup  cl=QUORUM duration=600m -schema 'replication(factor=3)' -port jmx=6868 -mode cql3 native -rate 'threads=50 throttle=4000/s' -col 'size=FIXED(128) n=FIXED(8)' -pop 'dist=gauss(1..25000000,12500000,1250000)' "
stress_cmd_m: "cassandra-stress mixed no-warmup cl=QUORUM duration=600m -schema 'replication(factor=3)' -port jmx=6868 -mode cql3 native -rate 'threads=50 throttle=3500/s' -col 'size=FIXED(128) n=FIXED(8)' -pop 'dist=gauss(1..25000000,12500000,1250000)' "

n_db_nodes: 3
nemesis_add_node_cnt: 3
n_loaders: 4
n_monitor_nodes: 1

instance_type_loader: 'c5.2xlarge'
instance_type_monitor: 't3.large'
instance_type_db: 'i3.2xlarge'

nemesis_class_name: 'NemesisSequence'
nemesis_interval: 30
nemesis_sequence_sleep_between_ops: 10

user_prefix: 'perf-latency-nemesis'
space_node_threshold: 644245094
ami_id_db_scylla_desc: 'VERSION_DESC'

round_robin: true
append_scylla_args: '--blocked-reactor-notify-ms 5'
backtrace_decoding: false

store_perf_results: true
send_email: true
email_recipients: ["scylla-perf-results@scylladb.com"]
